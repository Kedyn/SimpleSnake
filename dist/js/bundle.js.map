{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/src/framework/Button.ts","js/src/framework/Drawing.ts","js/src/framework/Game.ts","js/src/framework/GameObject.ts","js/src/framework/GameScene.ts","js/src/framework/GameSceneManager.ts","js/src/framework/InputHandler.ts","js/src/framework/KeyCode.ts","js/src/framework/Vector2D.ts","js/src/game/AboutScene.ts","js/src/game/GameOverScene.ts","js/src/game/IntroScene.ts","js/src/game/MenuScene.ts","js/src/game/PauseScene.ts","js/src/game/PlayScene.ts","js/src/main.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Drawing_1","GameObject_1","Vector2D_1","BACKGROUND","LIGHT","SHADOW","BORDER","TEXT","FONT_SIZE","FONT_NAME","ButtonDrawing","_super","object","text","canvas_context","this","bg_rect","RectangularGameObject","Vector2D","position","x","y","width","height","light_rect","shadow_rect","border_rect","background","RectangleDrawing","light","shadow","border","button_text","TextDrawing","__extends","prototype","draw","pressed","Drawing","ButtonGameObject","input_handler","clicked","update","drawing","isMouseButtonDown","cooInObject","mousePos","GameObject","./Drawing","./GameObject","./Vector2D","2","color","fill","fillStyle","fillRect","strokeStyle","lineWidth","strokeRect","LineDrawing","start_position","end_position","PolyGameObject","moveTo","lineTo","stroke","CircleDrawing","start_angle","end_angle","clockwise","beginPath","arc","radius","font_size","font_name","center","save","font","measureText","restore","textAlign","fillText","strokeText","ImageDrawing","image","drawImage","3","InputHandler_1","GameSceneManager_1","SECOND","Game","game_id","canvas","_this","animate","time","Date","elapse","getTime","last_time","interval","frame_rate","scene_manager","render","requestAnimationFrame","onKeyDown","key","onKeyUp","onMouseMove","pos","onMouseDown","button","onMouseUp","callbacks","frame_counter","InputHandler","GameSceneManager","init","frameRate","inputHandler","isKeyDown","pushScene","scene","changeScene","popScene","./GameSceneManager","./InputHandler","4","AnyGameObject","CircularGameObject","initial_point","end_points","unshift","coo","Math","pow","inside","j","xi","yi","xj","yj","intersect","5","GameScene","id","objects","_i","_a","onEnter","onExit","6","scenes","push","splice","console","log","pop","currentScene","7","KeyCode_1","keys","mouse_buttons","ev","preventDefault","keyCode","pageX","pageY","offsetLeft","offsetTop","mouse_pos","tabIndex","addEventListener","onclick","oncontextmenu","onwheel","focus","KEYCODE","int","parseInt","isNaN","./KeyCode","8","9","isEqual","vector","sqrt","copy","add","subtract","multiply","scalar","divide","normalize","10","GameScene_1","Button_1","TITLE_SIZE","TITLE_FONT","TITLE_COLOR","BUTTON_WIDTH","BUTTON_HEIGHT","BUTTON_SPACE","TEXT_SIZE","TEXT_FONT","TEXT_SPACE","TEXT_COLOR","AboutScene","game","context_text","getContext","menu_rect","bg","title","menu_button","text_items","string","../framework/Button","../framework/Drawing","../framework/GameObject","../framework/GameScene","../framework/Vector2D","11","MenuScene_1","GameOverScene","MenuScene","./MenuScene","12","DELAY","IntroScene","logo","document","getElementById","start_time","13","PlayScene_1","AboutScene_1","about_scene","play_rect","about_rect","play_button","about_button","PlayScene","./AboutScene","./PlayScene","14","PauseScene","KEY_P","../framework/KeyCode","15","getRandomIntInclusive","min","max","ceil","floor","random","DIRECTION","GameOverScene_1","PauseScene_1","SNAKE_COLOR","FOOD_COLOR","SCORE_COLOR","CELL_SIZE","body","head_rect","head","body_rect","body_part","direction","RIGHT","food_rect","food","setFood","pause_scene","score","score_text","LEFT_ARROW","LEFT","UP_ARROW","UP","RIGHT_ARROW","DOWN_ARROW","DOWN","neck","head_pos","new_neck_pos","dead","repositioning","set","cols","rows","attempt","isInSnake","answer","searching","./GameOverScene","./PauseScene","16","Game_1","IntroScene_1","window","onload"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import {Drawing, RectangleDrawing, TextDrawing} from \"./Drawing\";\r\nimport {RectangularGameObject, GameObject} from \"./GameObject\";\r\nimport {Vector2D} from \"./Vector2D\";\r\nimport {InputHandler} from \"./InputHandler\";\r\n\r\nconst BACKGROUND = \"#1F1F1F\";\r\nconst LIGHT      = \"#2F2F2F\";\r\nconst SHADOW     = \"#0F0F0F\";\r\nconst BORDER     = \"#000000\";\r\nconst TEXT       = \"#FFFFFF\";\r\nconst FONT_SIZE  = 14;\r\nconst FONT_NAME  = \"impact\";\r\n\r\nclass ButtonDrawing extends Drawing {\r\n    public pressed: boolean;\r\n\r\n    public constructor(public object: RectangularGameObject, public text: string, private canvas_context: CanvasRenderingContext2D) {\r\n        super();\r\n        let bg_rect = new RectangularGameObject(new Vector2D(object.position.x, object.position.y), object.width, object.height);\r\n        let light_rect = new RectangularGameObject(new Vector2D(object.position.x + 1, object.position.y + 1), object.width - 1, object.height - 1);\r\n        let shadow_rect = new RectangularGameObject(new Vector2D(object.position.x, object.position.y), object.width - 1, object.height - 1);\r\n        let border_rect = new RectangularGameObject(new Vector2D(object.position.x, object.position.y), object.width, object.height);\r\n        this.background = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        this.light = new RectangleDrawing(light_rect, LIGHT, false, canvas_context);\r\n        this.shadow = new RectangleDrawing(shadow_rect, SHADOW, false, canvas_context);\r\n        this.border = new RectangleDrawing(border_rect, BORDER, false, canvas_context);\r\n        this.button_text = new TextDrawing(new Vector2D(object.position.x + (object.width / 2), object.position.y + (object.height + FONT_SIZE / 2) / 2), FONT_SIZE, FONT_NAME, TEXT, text, true, true, canvas_context);\r\n    }\r\n\r\n    public draw() {\r\n        this.light.object.position.x = this.object.position.x + 1;\r\n        this.light.object.position.y = this.object.position.y + 1;\r\n        this.shadow.object.position.x = this.object.position.x;\r\n        this.shadow.object.position.y = this.object.position.y;\r\n        this.button_text.object.position.x = this.object.position.x + (this.object.width / 2);\r\n        this.button_text.object.position.y = this.object.position.y + (this.object.height + FONT_SIZE / 2) / 2;\r\n        if (this.pressed) {\r\n            this.light.object.position.x = this.object.position.x;\r\n            this.light.object.position.y = this.object.position.y;\r\n            this.shadow.object.position.x = this.object.position.x + 1;\r\n            this.shadow.object.position.y = this.object.position.y + 1;\r\n            this.button_text.object.position.x = this.object.position.x + (this.object.width / 2) - 1;\r\n            this.button_text.object.position.y = this.object.position.y + (this.object.height + FONT_SIZE / 2) / 2 - 1;\r\n        }\r\n        this.background.draw();\r\n        this.light.draw();\r\n        this.shadow.draw();\r\n        this.border.draw();\r\n        this.button_text.draw();\r\n    }\r\n\r\n    private background: RectangleDrawing;\r\n    private light: RectangleDrawing;\r\n    private shadow: RectangleDrawing;\r\n    private border: RectangleDrawing;\r\n    private button_text: TextDrawing;\r\n}\r\n\r\nclass ButtonGameObject extends GameObject {\r\n    public clicked: boolean;\r\n\r\n    public constructor(object: RectangularGameObject, text: string, canvas_context: CanvasRenderingContext2D, private input_handler: InputHandler) {\r\n        super(new ButtonDrawing(object, text, canvas_context));\r\n        this.clicked = false;\r\n    }\r\n\r\n    public update(): void {\r\n        this.clicked = ((<ButtonDrawing>this.drawing).pressed && !this.input_handler.isMouseButtonDown(0));\r\n        (<ButtonDrawing>this.drawing).pressed = (this.cooInObject(this.input_handler.mousePos()) && this.input_handler.isMouseButtonDown(0));\r\n    }\r\n}\r\n\r\nexport {ButtonGameObject};","/*\r\n Dependencies:\r\n */\r\nimport {AnyGameObject, RectangularGameObject, PolyGameObject, CircularGameObject} from \"./GameObject\";\r\nimport {Vector2D} from \"./Vector2D\";\r\n\r\nabstract class Drawing {\r\n    public object: AnyGameObject;\r\n\r\n    public constructor() {}\r\n\r\n    abstract draw(): void;\r\n}\r\n\r\nclass RectangleDrawing extends Drawing {\r\n    public constructor(public object: RectangularGameObject, public color: string, public fill: boolean, private canvas_context: CanvasRenderingContext2D) {\r\n        super();\r\n    }\r\n\r\n    draw(): void {\r\n        if (this.fill) {\r\n            this.canvas_context.fillStyle = this.color;\r\n            this.canvas_context.fillRect(this.object.position.x, this.object.position.y, this.object.width, this.object.height);\r\n        }\r\n        else {\r\n            this.canvas_context.strokeStyle = this.color;\r\n            this.canvas_context.lineWidth = 1;\r\n            this.canvas_context.strokeRect(this.object.position.x, this.object.position.y, this.object.width, this.object.height);\r\n        }\r\n    }\r\n}\r\n\r\nclass LineDrawing extends Drawing {\r\n    constructor(public start_position: Vector2D, public end_position: Vector2D, public color: string, private canvas_context: CanvasRenderingContext2D) {\r\n        super();\r\n        this.object = new PolyGameObject(start_position, [end_position]);\r\n    }\r\n\r\n    draw(): void {\r\n        this.canvas_context.strokeStyle = this.color;\r\n        this.canvas_context.moveTo(this.start_position.x, this.start_position.y);\r\n        this.canvas_context.lineTo(this.end_position.x,this.end_position.y);\r\n        this.canvas_context.lineWidth = 1;\r\n        this.canvas_context.stroke();\r\n    }\r\n}\r\n\r\nclass CircleDrawing extends Drawing {\r\n    constructor(public object: CircularGameObject, public color: string, public start_angle: number, public end_angle: number, public clockwise: boolean, public fill: boolean, private canvas_context: CanvasRenderingContext2D) {\r\n        super();\r\n    }\r\n\r\n    draw(): void {\r\n        this.canvas_context.beginPath();\r\n        this.canvas_context.arc(this.object.position.x, this.object.position.y, this.object.radius, this.start_angle, this.end_angle, this.clockwise);\r\n        if (this.fill) {\r\n            this.canvas_context.fillStyle = this.color;\r\n            this.canvas_context.fill();\r\n        }\r\n        else {\r\n            this.canvas_context.strokeStyle = this.color;\r\n            this.canvas_context.lineWidth = 1;\r\n            this.canvas_context.stroke();\r\n        }\r\n    }\r\n}\r\n\r\nclass TextDrawing extends Drawing {\r\n    constructor(position: Vector2D, public font_size: number, public font_name: string, public color: string, public text: string, public center: boolean, public fill: boolean, private canvas_context: CanvasRenderingContext2D) {\r\n        super();\r\n        canvas_context.save();\r\n        canvas_context.font = font_size + \"px \" + font_name;\r\n        let width = canvas_context.measureText(text).width;\r\n        this.object = new RectangularGameObject(position,width,font_size);\r\n        canvas_context.restore();\r\n    }\r\n\r\n    draw(): void {\r\n        this.canvas_context.font = this.font_size + \"px \" + this.font_name;\r\n        this.canvas_context.textAlign = \"left\";\r\n        if (this.center) {\r\n            this.canvas_context.textAlign = \"center\";\r\n        }\r\n        if (this.fill) {\r\n            this.canvas_context.fillStyle = this.color;\r\n            this.canvas_context.fillText(this.text, this.object.position.x, this.object.position.y);\r\n        }\r\n        else {\r\n            this.canvas_context.strokeStyle = this.color;\r\n            this.canvas_context.strokeText(this.text, this.object.position.x, this.object.position.y);\r\n        }\r\n    }\r\n}\r\n\r\nclass ImageDrawing extends Drawing {\r\n    public width: number;\r\n    public height: number;\r\n    constructor(public position: Vector2D, public image: HTMLImageElement, public center: boolean, private canvas_context: CanvasRenderingContext2D, width?: number, height?: number) {\r\n        super();\r\n        if (this.center) {\r\n            position.x -= image.width / 2;\r\n            position.y -= image.height / 2;\r\n        }\r\n        if (width && height) {\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n        else {\r\n            this.width = image.width;\r\n            this.height = image.height;\r\n        }\r\n        this.object = new RectangularGameObject(position,width,height);\r\n    }\r\n\r\n    draw(): void {\r\n        this.canvas_context.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\r\n    }\r\n}\r\n\r\nexport {Drawing, RectangleDrawing, LineDrawing, CircleDrawing, TextDrawing, ImageDrawing};","/*\r\n Dependencies:\r\n */\r\nimport {InputHandler} from \"./InputHandler\";\r\nimport {KEYCODE} from \"./KeyCode\";\r\nimport {Vector2D} from \"./Vector2D\";\r\nimport {GameSceneManager} from \"./GameSceneManager\";\r\nimport {GameScene} from \"./GameScene\";\r\n\r\n/*\r\n Constants\r\n */\r\nconst SECOND: number = 1000; //in milliseconds\r\n\r\nclass Game {\r\n    /*\r\n     * constructor: constructs the game instance\r\n     * @game_id: string, a game ID used for debugging purposes.\r\n     * @canvas: HTMLCanvasElement, the canvas element that you wish your game to be drawn on.\r\n     */\r\n    public constructor(private game_id: string, public canvas: HTMLCanvasElement) {\r\n        let callbacks = {\r\n            \"onKeyDown\": this.onKeyDown,\r\n            \"onKeyUp\": this.onKeyUp,\r\n            \"onMouseMove\": this.onMouseMove,\r\n            \"onMouseDown\": this.onMouseDown,\r\n            \"onMouseUp\": this.onMouseUp\r\n        };\r\n        this.frame_rate = 60;\r\n        let time = new Date();\r\n        this.frame_counter = 0;\r\n        this.last_time = time.getTime();\r\n        this.input_handler = new InputHandler(this.canvas, callbacks);\r\n        this.scene_manager = new GameSceneManager();\r\n    }\r\n\r\n    /*\r\n     * init: initializes the game loop.\r\n     * No parameters\r\n     */\r\n    public init(): void {\r\n        requestAnimationFrame(this.animate);\r\n    }\r\n\r\n    /*\r\n     * frameRate: sets frame rate.\r\n     * @frame_rate: number, the number of frames per second.\r\n     */\r\n    public frameRate(frame_rate) {\r\n        this.frame_rate = frame_rate;\r\n    }\r\n\r\n    /*\r\n     * inputHandler: returns the current input handler.\r\n     */\r\n    public inputHandler(): InputHandler {\r\n        return this.input_handler;\r\n    }\r\n\r\n    /*\r\n     * Input Handler functions:\r\n     */\r\n\r\n    public isKeyDown(key: KEYCODE): boolean {\r\n        return this.input_handler.isKeyDown(key);\r\n    }\r\n\r\n    public mousePos(): Vector2D {\r\n        return this.input_handler.mousePos();\r\n    }\r\n\r\n    public isMouseButtonDown(button: number): boolean {\r\n        return this.input_handler.isMouseButtonDown(button);\r\n    }\r\n\r\n    /*\r\n     * Game Scene Manager functions:\r\n     */\r\n\r\n    public pushScene(scene: GameScene): void {\r\n        this.scene_manager.pushScene(scene);\r\n    }\r\n\r\n    public changeScene(scene: GameScene): void {\r\n        this.scene_manager.changeScene(scene);\r\n    }\r\n\r\n    public popScene(): void {\r\n        this.scene_manager.popScene();\r\n    }\r\n\r\n    private frame_rate: number;\r\n    private frame_counter: number;\r\n    private last_time: number;\r\n    private input_handler: InputHandler;\r\n    private scene_manager: GameSceneManager;\r\n\r\n    /*\r\n     * Game Loop\r\n     */\r\n    private animate = (): void => {\r\n        let time = new Date();\r\n        let elapse = time.getTime() - this.last_time;\r\n        let interval = SECOND / this.frame_rate;\r\n        if (elapse > interval) {\r\n            this.scene_manager.update();\r\n            this.scene_manager.render();\r\n            this.last_time = time.getTime() - (elapse % interval);\r\n        }\r\n        requestAnimationFrame(this.animate);\r\n    };\r\n\r\n    /*\r\n     * The following are input handler callbacks\r\n     */\r\n\r\n    private onKeyDown = (key: KEYCODE): void => {\r\n        this.scene_manager.onKeyDown(key);\r\n    };\r\n\r\n    private onKeyUp = (key: KEYCODE): void => {\r\n        this.scene_manager.onKeyUp(key);\r\n    };\r\n\r\n    private onMouseMove = (pos: Vector2D): void => {\r\n        this.scene_manager.onMouseMove(pos);\r\n    };\r\n\r\n    private onMouseDown = (button: number, pos: Vector2D): void => {\r\n        this.scene_manager.onMouseDown(button, pos);\r\n    };\r\n\r\n    private onMouseUp = (button: number, pos: Vector2D): void => {\r\n        this.scene_manager.onMouseUp(button, pos);\r\n    };\r\n}\r\n\r\nexport {Game};","/*\r\n Dependencies:\r\n */\r\nimport {Vector2D} from \"./Vector2D\";\r\nimport {Drawing} from \"./Drawing\";\r\n\r\nabstract class AnyGameObject {\r\n    public constructor(public position: Vector2D) {}\r\n}\r\n\r\nclass RectangularGameObject extends AnyGameObject {\r\n    public constructor(public position: Vector2D, public width: number, public height: number) {\r\n        super(position);\r\n    }\r\n}\r\n\r\nclass CircularGameObject extends AnyGameObject {\r\n    public constructor(public position: Vector2D, public radius: number) {\r\n        super(position);\r\n    }\r\n}\r\n\r\nclass PolyGameObject extends AnyGameObject {\r\n    constructor(public initial_point: Vector2D, public end_points: Vector2D[]) {\r\n        super(initial_point);\r\n        end_points.unshift(initial_point);\r\n    }\r\n}\r\n\r\nclass GameObject {\r\n    /*\r\n     * constructor: constructs the game object\r\n     * @id: string, a game object id.\r\n     * @drawing: Drawing, the drawing associated with the object.\r\n     */\r\n    public constructor(public drawing: Drawing) {}\r\n\r\n    /*\r\n     * update: updates the object\r\n     * no parameters\r\n     */\r\n    public update(): void {\r\n\r\n    }\r\n\r\n    /*\r\n     * render: renders the object\r\n     * no parameters\r\n     */\r\n    public render(): void {\r\n        this.drawing.draw();\r\n    }\r\n\r\n    /*\r\n     * cooInObject: returns true if a coordinate is in an object.\r\n     * @coo\r\n     */\r\n    public cooInObject(coo: Vector2D): boolean {\r\n        let x = this.drawing.object.position.x;\r\n        let y = this.drawing.object.position.y;\r\n        if ((<RectangularGameObject>this.drawing.object).width) {\r\n            return (coo.x >= x &&\r\n            coo.x <= x + (<RectangularGameObject>this.drawing.object).width &&\r\n            coo.y >= y &&\r\n            coo.y <= y + (<RectangularGameObject>this.drawing.object).height);\r\n        }\r\n        else if ((<CircularGameObject>this.drawing.object).radius) {\r\n            return (Math.pow((<CircularGameObject>this.drawing.object).radius,2) <= Math.pow(coo.x - x,2) + Math.pow(coo.y - y,2));\r\n        }\r\n        else if ((<PolyGameObject>this.drawing.object).end_points.length) {\r\n            x = coo.x;\r\n            y = coo.y;\r\n            let inside = false;\r\n            for (let i = 0, j = (<PolyGameObject>this.drawing.object).end_points.length - 1; i < (<PolyGameObject>this.drawing.object).end_points.length; j = i++) {\r\n                let xi = (<PolyGameObject>this.drawing.object).end_points[i].x;\r\n                let yi = (<PolyGameObject>this.drawing.object).end_points[i].y;\r\n                let xj = (<PolyGameObject>this.drawing.object).end_points[j].x;\r\n                let yj = (<PolyGameObject>this.drawing.object).end_points[j].y;\r\n                let intersect = ((yi > y) != (yj > y))\r\n                    && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n                if (intersect) inside = !inside;\r\n            }\r\n            return inside;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport {AnyGameObject, RectangularGameObject, CircularGameObject, PolyGameObject, GameObject};","/*\r\n Dependencies:\r\n */\r\nimport {GameObject} from \"./GameObject\";\r\nimport {Vector2D} from \"./Vector2D\";\r\n\r\nclass GameScene {\r\n    public objects: GameObject[] = [];\r\n\r\n    public constructor(public id: string) {}\r\n\r\n    /*\r\n     * update: updates the scene.\r\n     * no parameters\r\n     */\r\n    public update(): void {\r\n        for (let object of this.objects) {\r\n            object.update();\r\n        }\r\n    }\r\n\r\n    /*\r\n     * render: renders the scene.\r\n     * no parameters\r\n     */\r\n    public render(): void {\r\n        for (let object of this.objects) {\r\n            object.render();\r\n        }\r\n    }\r\n\r\n    /*\r\n     * onEnter: returns true if entering the scene was successful, false otherwise\r\n     * no parameters\r\n     */\r\n    public onEnter(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /*\r\n     * Input Handler functions:\r\n     */\r\n\r\n    public onKeyDown(key: number): void {}\r\n\r\n    public onKeyUp(key: number): void {}\r\n\r\n    public onMouseMove(pos: Vector2D): void {}\r\n\r\n    public onMouseDown(button: number, pos: Vector2D): void {}\r\n\r\n    public onMouseUp(button: number, pos: Vector2D): void {}\r\n\r\n    /*\r\n     * onExit: returns true if exiting the scene was successful, false otherwise\r\n     * no parameters\r\n     */\r\n    public onExit(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport {GameScene};\r\n","/*\r\n Dependencies:\r\n */\r\nimport {GameScene} from \"./GameScene\";\r\nimport {KEYCODE} from \"./KeyCode\";\r\nimport {Vector2D} from \"./Vector2D\";\r\n\r\nclass GameSceneManager {\r\n    public constructor() {}\r\n\r\n    /*\r\n     * pushScene: adds a scene and makes it the current scene of the game.\r\n     * @scene: GameScene, the scene you want to add to your game.\r\n     */\r\n    public pushScene(scene: GameScene): void {\r\n        this.scenes.push(scene);\r\n    }\r\n\r\n    /*\r\n     * changeScene: replaces the current scene with the specified scene.\r\n     * @scene: GameScene, the scene you want to put in place of the current scene.\r\n     */\r\n    public changeScene(scene: GameScene): void {\r\n        if (this.scenes.length) {\r\n            if (this.scenes[this.scenes.length - 1].id != scene.id) {\r\n                this.scenes.push(scene);\r\n                if (this.scenes[this.scenes.length - 1].onExit()) {\r\n                    this.scenes.splice(this.scenes.length - 2, 1);\r\n                }\r\n                else {\r\n                    console.log(\"Error exiting scene \" + this.scenes[this.scenes.length - 1].id);\r\n                }\r\n                if (!this.scenes[this.scenes.length - 1].onEnter()) {\r\n                    console.log(\"Error while changing scene\");\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"Cannot change to the same scene\");\r\n            }\r\n        }\r\n        else {\r\n            console.log(\"Cannot change scene when there are no current scenes\");\r\n        }\r\n    }\r\n\r\n    /*\r\n     * popScene: removes the current scene and makes the previous scene the current scene.\r\n     * no parameters\r\n     */\r\n    public popScene(): void {\r\n        if (this.scenes.length > 1) {\r\n            if (this.scenes[this.scenes.length - 1].onExit()) {\r\n                this.scenes.pop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * currentScene: returns the current game scene.\r\n     * no parameters\r\n     */\r\n    public currentScene(): GameScene {\r\n        return this.scenes[this.scenes.length - 1];\r\n    }\r\n\r\n    /*\r\n     * update: updates the current scene.\r\n     * no parameters\r\n     */\r\n    public update(): void {\r\n        this.currentScene().update();\r\n    }\r\n\r\n    /*\r\n     * render: renders the current scene.\r\n     * no parameters\r\n     */\r\n    public render(): void {\r\n        this.currentScene().render();\r\n    }\r\n\r\n    private scenes: GameScene[] = [];\r\n\r\n    /*\r\n     * Input Handler functions:\r\n     */\r\n\r\n    public onKeyDown(key: KEYCODE): void {\r\n        this.currentScene().onKeyDown(key);\r\n    }\r\n\r\n    public onKeyUp(key: KEYCODE): void {\r\n        this.currentScene().onKeyUp(key);\r\n    }\r\n\r\n    public onMouseMove(pos: Vector2D): void {\r\n        this.currentScene().onMouseMove(pos);\r\n    }\r\n\r\n    public onMouseDown(button: number, pos: Vector2D): void {\r\n        this.currentScene().onMouseDown(button, pos);\r\n    }\r\n\r\n    public onMouseUp(button: number, pos: Vector2D): void {\r\n        this.currentScene().onMouseUp(button, pos);\r\n    }\r\n}\r\n\r\nexport {GameSceneManager};","/*\r\n Dependencies:\r\n */\r\nimport {Vector2D} from \"./Vector2D\";\r\nimport {KEYCODE} from \"./KeyCode\";\r\n\r\nclass InputHandler {\r\n    /*\r\n     Public:\r\n    */\r\n\r\n    /*\r\n     * constructor: constructs the input handler instance\r\n     * @canvas: HTMLCanvasElement, the canvas element that you wish your game to be drawn on.\r\n     * @callbacks: Callback Functions array, array of callbacks for events.\r\n     *             Current callbacks:\r\n     *             \"onKeyDown\"   : emitted when a key is pressed\r\n     *             \"onKeyUp\"     : emitted when a key is released\r\n     *             \"onMouseMove\" : emitted when the mouse is moved\r\n     *             \"onMouseDown\" : emitted when a mouse button is pressed\r\n     *             \"onMouseUp\"   : emitted when a mouse button is released\r\n     */\r\n    public constructor(private canvas: HTMLCanvasElement, private callbacks: any) {\r\n        //Adding event listeners for canvas\r\n        canvas.tabIndex = 0;\r\n        canvas.addEventListener(\"keydown\",this.onKeyDown,false);\r\n        canvas.addEventListener(\"keyup\",this.onKeyUp,false);\r\n        canvas.addEventListener(\"mousemove\",this.onMouseMove,false);\r\n        canvas.addEventListener(\"mousedown\",this.onMouseDown,false);\r\n        canvas.addEventListener(\"mouseup\",this.onMouseUp,false);\r\n        canvas.onclick = function (ev: MouseEvent) { return false; };\r\n        canvas.oncontextmenu = function (ev: PointerEvent){ return false; };\r\n        canvas.onwheel = function (ev: WheelEvent) { return false; };\r\n        canvas.focus();\r\n\r\n        //populating arrays\r\n        for (let key in KEYCODE) {\r\n            let int = parseInt(key,10);\r\n            if (!isNaN(int)) {\r\n                this.keys[int] = false;\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            this.mouse_buttons[i] = false;\r\n        }\r\n\r\n        this.mouse_pos = new Vector2D(0,0);\r\n    }\r\n\r\n    /*\r\n     * isKeyDown: returns true if a \"key\" (KEYCODE) has been pressed, returns false otherwise\r\n     * @key: KEYCODE, the key you wish to know if the key is down.\r\n     */\r\n    public isKeyDown(key: KEYCODE): boolean {\r\n        if (this.keys[key]) {\r\n            return this.keys[key];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * mousePos: returns a Vector2D with the mouse position\r\n     * no parameters\r\n     */\r\n    mousePos(): Vector2D {\r\n        return this.mouse_pos;\r\n    }\r\n\r\n    /*\r\n     * isMouseButtonDown: returns true if a mouse button is pressed, false otherwise\r\n     * @button: number, the mouse button you want to check\r\n     *          Currently it can store up to 10 mouse buttons.\r\n     *          0 is usually the left button\r\n     *          1 is usually the mid button\r\n     *          2 is usaully the right button\r\n     */\r\n    isMouseButtonDown(button: number): boolean {\r\n        if (this.mouse_buttons[button]) {\r\n            return this.mouse_buttons[button];\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     Private:\r\n     */\r\n\r\n    private keys: boolean[] = [];\r\n    private mouse_buttons: boolean[] = [];\r\n    private mouse_pos: Vector2D;\r\n\r\n    //functions:\r\n\r\n    /*\r\n     * The following are function callbacks for events\r\n     */\r\n\r\n    private onKeyDown = (ev: KeyboardEvent): void => {\r\n        ev.preventDefault();\r\n        this.keys[ev.keyCode] = true;\r\n        if (this.callbacks[\"onKeyDown\"]) {\r\n            this.callbacks[\"onKeyDown\"](ev.keyCode);\r\n        }\r\n    };\r\n\r\n    private onKeyUp = (ev: KeyboardEvent): void => {\r\n        this.keys[ev.keyCode] = false;\r\n        if (this.callbacks['onKeyUp']) {\r\n            this.callbacks['onKeyUp'](ev.keyCode);\r\n        }\r\n    };\r\n\r\n    private onMouseMove = (ev: MouseEvent): void => {\r\n        let x: number = ev.pageX;\r\n        let y: number = ev.pageY;\r\n        x -= this.canvas.offsetLeft;\r\n        y -= this.canvas.offsetTop;\r\n        this.mouse_pos.x = x;\r\n        this.mouse_pos.y = y;\r\n        if (this.callbacks[\"onMouseMove\"]) {\r\n            this.callbacks[\"onMouseMove\"](this.mouse_pos);\r\n        }\r\n    };\r\n\r\n    private onMouseDown = (ev: MouseEvent): void => {\r\n        this.mouse_buttons[ev.button] = true;\r\n        if (this.callbacks[\"onMouseDown\"]) {\r\n            this.callbacks[\"onMouseDown\"](ev.button,this.mouse_pos);\r\n        }\r\n    };\r\n\r\n    private onMouseUp = (ev: MouseEvent): void => {\r\n        this.mouse_buttons[ev.button] = false;\r\n        if (this.callbacks[\"onMouseUp\"]) {\r\n            this.callbacks[\"onMouseUp\"](ev.button,this.mouse_pos);\r\n        }\r\n    };\r\n}\r\n\r\nexport {InputHandler};","enum KEYCODE {\r\n    BACKSPACE = 8,\r\n    TAB = 9,\r\n    ENTER = 13,\r\n    SHIFT = 16,\r\n    CTRL = 17,\r\n    ALT = 18,\r\n    PAUSE = 19,\r\n    CAPS_LOCK = 20,\r\n    ESCAPE = 27,\r\n    SPACE = 32,\r\n    PAGE_UP = 33,\r\n    PAGE_DOWN = 34,\r\n    END = 35,\r\n    HOME = 36,\r\n    LEFT_ARROW = 37,\r\n    UP_ARROW = 38,\r\n    RIGHT_ARROW = 39,\r\n    DOWN_ARROW = 40,\r\n    INSERT = 45,\r\n    DELETE = 46,\r\n    KEY_0 = 48,\r\n    KEY_1 = 49,\r\n    KEY_2 = 50,\r\n    KEY_3 = 51,\r\n    KEY_4 = 52,\r\n    KEY_5 = 53,\r\n    KEY_6 = 54,\r\n    KEY_7 = 55,\r\n    KEY_8 = 56,\r\n    KEY_9 = 57,\r\n    KEY_A = 65,\r\n    KEY_B = 66,\r\n    KEY_C = 67,\r\n    KEY_D = 68,\r\n    KEY_E = 69,\r\n    KEY_F = 70,\r\n    KEY_G = 71,\r\n    KEY_H = 72,\r\n    KEY_I = 73,\r\n    KEY_J = 74,\r\n    KEY_K = 75,\r\n    KEY_L = 76,\r\n    KEY_M = 77,\r\n    KEY_N = 78,\r\n    KEY_O = 79,\r\n    KEY_P = 80,\r\n    KEY_Q = 81,\r\n    KEY_R = 82,\r\n    KEY_S = 83,\r\n    KEY_T = 84,\r\n    KEY_U = 85,\r\n    KEY_V = 86,\r\n    KEY_W = 87,\r\n    KEY_X = 88,\r\n    KEY_Y = 89,\r\n    KEY_Z = 90,\r\n    LEFT_META = 91,\r\n    RIGHT_META = 92,\r\n    SELECT = 93,\r\n    NUMPAD_0 = 96,\r\n    NUMPAD_1 = 97,\r\n    NUMPAD_2 = 98,\r\n    NUMPAD_3 = 99,\r\n    NUMPAD_4 = 100,\r\n    NUMPAD_5 = 101,\r\n    NUMPAD_6 = 102,\r\n    NUMPAD_7 = 103,\r\n    NUMPAD_8 = 104,\r\n    NUMPAD_9 = 105,\r\n    MULTIPLY = 106,\r\n    ADD = 107,\r\n    SUBTRACT = 109,\r\n    DECIMAL = 110,\r\n    DIVIDE = 111,\r\n    F1 = 112,\r\n    F2 = 113,\r\n    F3 = 114,\r\n    F4 = 115,\r\n    F5 = 116,\r\n    F6 = 117,\r\n    F7 = 118,\r\n    F8 = 119,\r\n    F9 = 120,\r\n    F10 = 121,\r\n    F11 = 122,\r\n    F12 = 123,\r\n    NUM_LOCK = 144,\r\n    SCROLL_LOCK = 145,\r\n    SEMICOLON = 186,\r\n    EQUALS = 187,\r\n    COMMA = 188,\r\n    DASH = 189,\r\n    PERIOD = 190,\r\n    FORWARD_SLASH = 191,\r\n    GRAVE_ACCENT = 192,\r\n    OPEN_BRACKET = 219,\r\n    BACK_SLASH = 220,\r\n    CLOSE_BRACKET = 221,\r\n    SINGLE_QUOTE = 222\r\n}\r\n\r\nexport {KEYCODE}","class Vector2D {\r\n    /*\r\n     * constructor: constructs the vector instance\r\n     * @x: number, the x coordinate of your vector\r\n     * @y: number, the y coordinate of your vector\r\n     */\r\n    public constructor(public x: number, public y: number) {}\r\n\r\n    /*\r\n     * isEqual: returns true if both components of the vector match\r\n     * @vector: the vector you want to compare te current vector with.\r\n     */\r\n    public isEqual(vector: Vector2D): boolean {\r\n        return (this.x == vector.x && this.y == vector.y);\r\n    }\r\n\r\n    /*\r\n     * length: returns the length of the vector\r\n     * no parameters\r\n     */\r\n    public length(): number {\r\n        return Math.sqrt(Math.pow(this.x,2) + Math.pow(this.y,2));\r\n    }\r\n\r\n    /*\r\n     * copy: copies a vector\r\n     * @vector: Vector2D, the vector you wish the current vector to equal to.\r\n     */\r\n    public copy(vector: Vector2D): void {\r\n        this.x = vector.x;\r\n        this.y = vector.y;\r\n    }\r\n\r\n    /*\r\n     * add: adds a vector to your current vector.\r\n     * @vector: Vector2D, the vector you want to add to your current vector.\r\n     */\r\n    public add(vector: Vector2D): void {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n    }\r\n\r\n    /*\r\n     * subtract: subtracts a vector to your current vector.\r\n     * @vector: Vector2D, the vector you want to subtract to your current vector.\r\n     */\r\n    public subtract(vector: Vector2D): void {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n    }\r\n\r\n    /*\r\n     * multiply: multiplies your current vector with a scalar.\r\n     * @scalar: number, the scalar you want your current vector to be multiplied by.\r\n     */\r\n    public multiply(scalar: number): void {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n    }\r\n\r\n    /*\r\n     * divide: divides your current vector by a scalar.\r\n     * @scalar: number, the scalar you want your current vector to be divided by.\r\n     */\r\n    public divide(scalar: number): void {\r\n        this.x /= scalar;\r\n        this.y /= scalar;\r\n    }\r\n\r\n    /*\r\n     * normalize: normalizes your current vector, sets your vector to a unit vector.\r\n     * no parameters\r\n     */\r\n    public normalize(): void {\r\n        let l = this.length();\r\n        if (l > 0) {\r\n            this.divide(l);\r\n        }\r\n    }\r\n}\r\n\r\nexport {Vector2D};","import {GameScene} from \"../framework/GameScene\";\r\nimport {RectangularGameObject, GameObject} from \"../framework/GameObject\";\r\nimport {Vector2D} from \"../framework/Vector2D\";\r\nimport {RectangleDrawing, TextDrawing} from \"../framework/Drawing\";\r\nimport {ButtonGameObject} from \"../framework/Button\";\r\n\r\nconst BACKGROUND    = \"#000000\";\r\nconst TITLE_SIZE    = 50;\r\nconst TITLE_FONT    = \"impact\";\r\nconst TITLE_COLOR   = '#FFFFFF';\r\nconst BUTTON_WIDTH  = 150;\r\nconst BUTTON_HEIGHT = 30;\r\nconst BUTTON_SPACE  = 10;\r\nconst TEXT_SIZE     = 14;\r\nconst TEXT_FONT     = \"impact\";\r\nconst TEXT_SPACE    = 4;\r\nconst TEXT_COLOR    = '#FFFFFF';\r\n\r\nclass AboutScene extends GameScene {\r\n    public constructor(private game) {\r\n        super(\"about\");\r\n        let canvas_context = game.canvas.getContext(\"2d\");\r\n        let width = game.canvas.width;\r\n        let height = game.canvas.height;\r\n        let bg_rect = new RectangularGameObject(new Vector2D(0,0), width, height);\r\n        let menu_rect = new RectangularGameObject(new Vector2D((width - BUTTON_WIDTH) / 2, height - BUTTON_HEIGHT - BUTTON_SPACE), BUTTON_WIDTH, BUTTON_HEIGHT);\r\n        let bg = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        let title = new TextDrawing(new Vector2D(width / 2, TITLE_SIZE + 5), TITLE_SIZE, TITLE_FONT, TITLE_COLOR, \"SIMPLE SNAKE\", true, true, canvas_context);\r\n        this.menu_button = new ButtonGameObject(menu_rect, \"MENU\", canvas_context,this.game.inputHandler());\r\n        this.objects.push(new GameObject(bg));\r\n        this.objects.push(new GameObject(title));\r\n        this.objects.push(this.menu_button);\r\n        let text_items = this.context_text.length;\r\n        let x = width / 2;\r\n        let y = height / 2 - (TEXT_SIZE / 2 * (text_items / 2) + (TEXT_SPACE * (text_items / 2)));\r\n        for (let string of this.context_text) {\r\n            this.objects.push(new GameObject(new TextDrawing(new Vector2D(x, y), TEXT_SIZE, TEXT_FONT, TEXT_COLOR, string, true, true, canvas_context)));\r\n            y += TEXT_SPACE + TEXT_SIZE;\r\n        }\r\n    }\r\n\r\n    public update(): void {\r\n        super.update();\r\n        if (this.menu_button.clicked) {\r\n            this.game.popScene();\r\n        }\r\n    }\r\n\r\n    private menu_button: ButtonGameObject;\r\n    private context_text = [\r\n        \"This game is a simple remake of the classic Snake game.\",\r\n        \"The objective of the game is to make the snake grow as much as possible without colliding with anything.\",\r\n        \" \",\r\n        \"Code by Kedyn Macedonio\"\r\n    ];\r\n}\r\n\r\nexport {AboutScene};\r\n","import {GameScene} from \"../framework/GameScene\";\r\nimport {RectangularGameObject, GameObject} from \"../framework/GameObject\";\r\nimport {Vector2D} from \"../framework/Vector2D\";\r\nimport {RectangleDrawing, TextDrawing} from \"../framework/Drawing\";\r\nimport {ButtonGameObject} from \"../framework/Button\";\r\nimport {MenuScene} from \"./MenuScene\";\r\n\r\nconst BACKGROUND    = \"#000000\";\r\nconst TITLE_SIZE    = 50;\r\nconst TITLE_FONT    = \"impact\";\r\nconst TITLE_COLOR   = '#FFFFFF';\r\nconst BUTTON_WIDTH  = 150;\r\nconst BUTTON_HEIGHT = 30;\r\nconst BUTTON_SPACE  = 10;\r\nconst TEXT_SIZE     = 20;\r\nconst TEXT_FONT     = \"impact\";\r\nconst TEXT_SPACE    = 4;\r\nconst TEXT_COLOR    = '#FFFFFF';\r\n\r\nclass GameOverScene extends GameScene {\r\n    public constructor(private game) {\r\n        super(\"about\");\r\n        let canvas_context = game.canvas.getContext(\"2d\");\r\n        let width = game.canvas.width;\r\n        let height = game.canvas.height;\r\n        let bg_rect = new RectangularGameObject(new Vector2D(0,0), width, height);\r\n        let menu_rect = new RectangularGameObject(new Vector2D((width - BUTTON_WIDTH) / 2, height - BUTTON_HEIGHT - BUTTON_SPACE), BUTTON_WIDTH, BUTTON_HEIGHT);\r\n        let bg = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        let title = new TextDrawing(new Vector2D(width / 2, TITLE_SIZE + 5), TITLE_SIZE, TITLE_FONT, TITLE_COLOR, \"SIMPLE SNAKE\", true, true, canvas_context);\r\n        this.menu_button = new ButtonGameObject(menu_rect, \"MENU\", canvas_context,this.game.inputHandler());\r\n        this.objects.push(new GameObject(bg));\r\n        this.objects.push(new GameObject(title));\r\n        this.objects.push(this.menu_button);\r\n        let text_items = this.context_text.length;\r\n        let x = width / 2;\r\n        let y = height / 2 - (TEXT_SIZE / 2 * (text_items / 2) + (TEXT_SPACE * (text_items / 2)));\r\n        for (let string of this.context_text) {\r\n            this.objects.push(new GameObject(new TextDrawing(new Vector2D(x, y), TEXT_SIZE, TEXT_FONT, TEXT_COLOR, string, true, true, canvas_context)));\r\n            y += TEXT_SPACE + TEXT_SIZE;\r\n        }\r\n    }\r\n\r\n    public update(): void {\r\n        super.update();\r\n        if (this.menu_button.clicked) {\r\n            this.game.changeScene(new MenuScene(this.game));\r\n        }\r\n    }\r\n\r\n    private menu_button: ButtonGameObject;\r\n    private context_text = [\r\n        \"GAME OVER\",\r\n        \"Thanks for playing!\"\r\n    ];\r\n}\r\n\r\nexport {GameOverScene};\r\n","import {GameScene} from \"../framework/GameScene\";\r\nimport {Game} from \"../framework/Game\";\r\nimport {RectangularGameObject, GameObject} from \"../framework/GameObject\";\r\nimport {Vector2D} from \"../framework/Vector2D\";\r\nimport {RectangleDrawing, ImageDrawing} from \"../framework/Drawing\";\r\nimport {MenuScene} from \"./MenuScene\";\r\n\r\nconst BACKGROUND = '#000000';\r\nconst DELAY: number = 3000; //from 1000 milliseconds\r\n\r\nclass IntroScene extends GameScene {\r\n    constructor(private game: Game) {\r\n        super(\"intro\");\r\n        let canvas_context = game.canvas.getContext(\"2d\");\r\n        let width = game.canvas.width;\r\n        let height = game.canvas.height;\r\n        let bg_rect = new RectangularGameObject(new Vector2D(0,0), width, height);\r\n        let bg = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        let logo = new ImageDrawing(new Vector2D(width / 2, height / 2), <HTMLImageElement>document.getElementById(\"img_logo\"), true, canvas_context);\r\n        this.objects.push(new GameObject(bg));\r\n        this.objects.push(new GameObject(logo));\r\n        let time = new Date();\r\n        this.start_time = time.getTime();\r\n    }\r\n\r\n    public update(): void {\r\n        let time = new Date();\r\n        if (time.getTime() - this.start_time >= DELAY) {\r\n            this.game.changeScene(new MenuScene(this.game));\r\n        }\r\n    }\r\n\r\n    private start_time: number;\r\n}\r\n\r\nexport {IntroScene};","import {GameScene} from \"../framework/GameScene\";\r\nimport {Game} from \"../framework/Game\";\r\nimport {RectangularGameObject, GameObject} from \"../framework/GameObject\";\r\nimport {RectangleDrawing, TextDrawing} from \"../framework/Drawing\";\r\nimport {Vector2D} from \"../framework/Vector2D\";\r\nimport {ButtonGameObject} from \"../framework/Button\";\r\nimport {PlayScene} from \"./PlayScene\";\r\nimport {AboutScene} from \"./AboutScene\";\r\n\r\nconst BACKGROUND    = \"#000000\";\r\nconst TITLE_SIZE    = 50;\r\nconst TITLE_FONT    = \"impact\";\r\nconst TITLE_COLOR   = '#FFFFFF';\r\nconst BUTTON_WIDTH  = 150;\r\nconst BUTTON_HEIGHT = 30;\r\nconst BUTTON_SPACE  = 10;\r\n\r\nclass MenuScene extends GameScene {\r\n    public constructor(private game: Game) {\r\n        super(\"menu\");\r\n        let canvas_context = game.canvas.getContext(\"2d\");\r\n        let width = game.canvas.width;\r\n        let height = game.canvas.height;\r\n        let bg_rect = new RectangularGameObject(new Vector2D(0,0), width, height);\r\n        let play_rect = new RectangularGameObject(new Vector2D((width - BUTTON_WIDTH) / 2, ((height - BUTTON_HEIGHT * 2 - BUTTON_SPACE) / 2 - BUTTON_SPACE)), BUTTON_WIDTH, BUTTON_HEIGHT);\r\n        let about_rect = new RectangularGameObject(new Vector2D((width - BUTTON_WIDTH) / 2, ((height - BUTTON_HEIGHT * 2 - BUTTON_SPACE) / 2) + BUTTON_HEIGHT), BUTTON_WIDTH, BUTTON_HEIGHT);\r\n        let bg = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        let title = new TextDrawing(new Vector2D(width / 2, TITLE_SIZE + 5), TITLE_SIZE, TITLE_FONT, TITLE_COLOR, \"SIMPLE SNAKE\", true, true, canvas_context);\r\n        this.play_button = new ButtonGameObject(play_rect, \"PLAY\", canvas_context, game.inputHandler());\r\n        this.about_button = new ButtonGameObject(about_rect, \"ABOUT\", canvas_context, game.inputHandler());\r\n        this.objects.push(new GameObject(bg));\r\n        this.objects.push(new GameObject(title));\r\n        this.objects.push(this.play_button);\r\n        this.objects.push(this.about_button);\r\n    }\r\n\r\n    public update(): void {\r\n        super.update();\r\n        if (this.play_button.clicked) {\r\n            this.game.changeScene(new PlayScene(this.game));\r\n        }\r\n        else if (this.about_button.clicked) {\r\n            this.game.pushScene(this.about_scene);\r\n        }\r\n    }\r\n\r\n    private play_button: ButtonGameObject;\r\n    private about_button: ButtonGameObject;\r\n    private about_scene: AboutScene = new AboutScene(this.game);\r\n}\r\n\r\nexport {MenuScene};","import {GameScene} from \"../framework/GameScene\";\r\nimport {RectangularGameObject, GameObject} from \"../framework/GameObject\";\r\nimport {Vector2D} from \"../framework/Vector2D\";\r\nimport {RectangleDrawing, TextDrawing} from \"../framework/Drawing\";\r\nimport {KEYCODE} from \"../framework/KeyCode\";\r\n\r\nconst BACKGROUND    = \"#000000\";\r\nconst TITLE_SIZE    = 50;\r\nconst TITLE_FONT    = \"impact\";\r\nconst TITLE_COLOR   = '#FFFFFF';\r\nconst TEXT_SIZE     = 20;\r\nconst TEXT_FONT     = \"impact\";\r\nconst TEXT_SPACE    = 4;\r\nconst TEXT_COLOR    = '#FFFFFF';\r\n\r\nclass PauseScene extends GameScene {\r\n    public constructor(private game) {\r\n        super(\"about\");\r\n        let canvas_context = game.canvas.getContext(\"2d\");\r\n        let width = game.canvas.width;\r\n        let height = game.canvas.height;\r\n        let bg_rect = new RectangularGameObject(new Vector2D(0,0), width, height);\r\n        let bg = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        let title = new TextDrawing(new Vector2D(width / 2, TITLE_SIZE + 5), TITLE_SIZE, TITLE_FONT, TITLE_COLOR, \"SIMPLE SNAKE\", true, true, canvas_context);\r\n        this.objects.push(new GameObject(bg));\r\n        this.objects.push(new GameObject(title));\r\n        let text_items = this.context_text.length;\r\n        let x = width / 2;\r\n        let y = height / 2 - (TEXT_SIZE / 2 * (text_items / 2) + (TEXT_SPACE * (text_items / 2)));\r\n        for (let string of this.context_text) {\r\n            this.objects.push(new GameObject(new TextDrawing(new Vector2D(x, y), TEXT_SIZE, TEXT_FONT, TEXT_COLOR, string, true, true, canvas_context)));\r\n            y += TEXT_SPACE + TEXT_SIZE;\r\n        }\r\n    }\r\n\r\n    public onKeyDown(key: KEYCODE): void {\r\n        super.onKeyDown(key); //it does nothing but just in case :)\r\n        if (key == KEYCODE.KEY_P) {\r\n            this.game.popScene();\r\n        }\r\n    }\r\n\r\n    private context_text = [\r\n        \"GAME PAUSED!\"\r\n    ];\r\n}\r\n\r\nexport {PauseScene};\r\n","import {GameScene} from \"../framework/GameScene\";\r\nimport {Game} from \"../framework/Game\";\r\nimport {RectangularGameObject, GameObject} from \"../framework/GameObject\";\r\nimport {Vector2D} from \"../framework/Vector2D\";\r\nimport {RectangleDrawing, TextDrawing} from \"../framework/Drawing\";\r\nimport {KEYCODE} from \"../framework/KeyCode\";\r\nimport {GameOverScene} from \"./GameOverScene\";\r\nimport {PauseScene} from \"./PauseScene\";\r\n\r\nconst BACKGROUND  = \"#000000\";\r\nconst SNAKE_COLOR = \"#005599\";\r\nconst FOOD_COLOR  = \"#770000\";\r\nconst SCORE_COLOR = \"rgba(255,255,255,0.75)\";\r\nconst TEXT_SIZE   = 12;\r\nconst TEXT_FONT   = \"impact\";\r\nconst CELL_SIZE   = 20;\r\n\r\nenum DIRECTION {\r\n    LEFT,\r\n    UP,\r\n    RIGHT,\r\n    DOWN\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nclass PlayScene extends GameScene {\r\n    public constructor(private game: Game) {\r\n        super(\"play\");\r\n        let canvas_context = game.canvas.getContext(\"2d\");\r\n        let width = game.canvas.width;\r\n        let height = game.canvas.height;\r\n        let bg_rect = new RectangularGameObject(new Vector2D(0,0), width, height);\r\n        let bg = new RectangleDrawing(bg_rect, BACKGROUND, true, canvas_context);\r\n        let head_rect = new RectangularGameObject(new Vector2D(CELL_SIZE * 2,0), CELL_SIZE, CELL_SIZE);\r\n        this.head = new RectangleDrawing(head_rect, SNAKE_COLOR, true, canvas_context);\r\n        let body_rect = new RectangularGameObject(new Vector2D(CELL_SIZE,0), CELL_SIZE, CELL_SIZE);\r\n        this.body.push(new RectangleDrawing(body_rect, SNAKE_COLOR, true, canvas_context));\r\n        body_rect = new RectangularGameObject(new Vector2D(0,0), CELL_SIZE, CELL_SIZE);\r\n        this.body.push(new RectangleDrawing(body_rect, SNAKE_COLOR, true, canvas_context));\r\n        this.objects.push(new GameObject(bg));\r\n        this.objects.push(new GameObject(this.head));\r\n        for (let body_part of this.body) {\r\n            this.objects.push(new GameObject(body_part));\r\n        }\r\n        this.direction = DIRECTION.RIGHT;\r\n        let food_rect = new RectangularGameObject(new Vector2D(0,0), CELL_SIZE, CELL_SIZE);\r\n        this.food = new RectangleDrawing(food_rect, FOOD_COLOR, true, canvas_context);\r\n        this.objects.push(new GameObject(this.food));\r\n        this.setFood();\r\n        this.pause_scene = new PauseScene(game);\r\n        this.frame_rate = 5;\r\n        this.score = 0;\r\n        this.score_text = new TextDrawing(new Vector2D(12, 12), TEXT_SIZE, TEXT_FONT, SCORE_COLOR, \"Score: \"+this.score, false, true, canvas_context);\r\n        this.objects.push(new GameObject(this.score_text));\r\n    }\r\n\r\n    public onEnter(): boolean {\r\n        this.game.frameRate(this.frame_rate);\r\n        return true;\r\n    }\r\n\r\n    public onExit(): boolean {\r\n        this.game.frameRate(60);\r\n        return true;\r\n    }\r\n\r\n    public onKeyDown(key: KEYCODE): void {\r\n        super.onKeyDown(key); //it does nothing but just in case :)\r\n        switch (key) {\r\n            case KEYCODE.LEFT_ARROW:\r\n                this.direction = DIRECTION.LEFT;\r\n                break;\r\n            case KEYCODE.UP_ARROW:\r\n                this.direction = DIRECTION.UP;\r\n                break;\r\n            case KEYCODE.RIGHT_ARROW:\r\n                this.direction = DIRECTION.RIGHT;\r\n                break;\r\n            case KEYCODE.DOWN_ARROW:\r\n                this.direction = DIRECTION.DOWN;\r\n                break;\r\n            case KEYCODE.KEY_P:\r\n                this.game.pushScene(this.pause_scene);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public update(): void {\r\n        let neck = this.body[0];\r\n        let head_pos = this.head.object.position;\r\n        let new_neck_pos = new Vector2D(head_pos.x, head_pos.y);\r\n        switch (this.direction) {\r\n            case DIRECTION.LEFT:\r\n                this.head.object.position.x -= CELL_SIZE;\r\n                break;\r\n            case DIRECTION.UP:\r\n                this.head.object.position.y -= CELL_SIZE;\r\n                break;\r\n            case DIRECTION.RIGHT:\r\n                this.head.object.position.x += CELL_SIZE;\r\n                break;\r\n            case DIRECTION.DOWN:\r\n                this.head.object.position.y += CELL_SIZE;\r\n                break;\r\n        }\r\n        let canvas = this.game.canvas;\r\n        let dead = false;\r\n        if (head_pos.isEqual(neck.object.position) || head_pos.x < 0 || head_pos.x > canvas.width || head_pos.y < 0 || head_pos.y > canvas.height) {\r\n            dead = true;\r\n        }\r\n        else {\r\n            let i = this.body.length - 1;\r\n            let repositioning = true;\r\n            while (repositioning) {\r\n                if (i > 0) {\r\n                    this.body[i].object.position.copy(this.body[i - 1].object.position);\r\n                    if (head_pos.isEqual(this.body[i].object.position)) {\r\n                        dead = true;\r\n                        repositioning = false;\r\n                    }\r\n                }\r\n                else {\r\n                    repositioning = false;\r\n                }\r\n                i--;\r\n            }\r\n            if (!dead) {\r\n                neck.object.position.copy(new_neck_pos);\r\n                if (head_pos.isEqual(this.food.object.position)) {\r\n                    let body_rect = new RectangularGameObject(new Vector2D(head_pos.x, head_pos.y), CELL_SIZE, CELL_SIZE);\r\n                    this.body.push(new RectangleDrawing(body_rect, SNAKE_COLOR, true, this.game.canvas.getContext(\"2d\")));\r\n                    this.objects.push(new GameObject(this.body[this.body.length - 1]));\r\n                    this.setFood();\r\n                    this.score++;\r\n                    this.score_text.text = \"Score: \" + (this.score * 10);\r\n                    if (this.score % 3 == 0 && this.frame_rate != 30) {\r\n                        this.frame_rate++;\r\n                        this.game.frameRate(this.frame_rate);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (dead) {\r\n            this.game.changeScene(new GameOverScene(this.game));\r\n        }\r\n    }\r\n\r\n    private head: RectangleDrawing;\r\n    private direction: DIRECTION;\r\n    private body: RectangleDrawing[] = [];\r\n    private food: RectangleDrawing;\r\n    private pause_scene: PauseScene;\r\n    private frame_rate: number;\r\n    private score: number;\r\n    private score_text: TextDrawing;\r\n\r\n    private setFood(): void {\r\n        let set = false;\r\n        let cols = this.game.canvas.width / CELL_SIZE;\r\n        let rows = this.game.canvas.height / CELL_SIZE;\r\n        let x = 0;\r\n        let y = 0;\r\n        while (!set) {\r\n            x = getRandomIntInclusive(0, cols - 1);\r\n            y = getRandomIntInclusive(0, rows - 1);\r\n            let attempt = new Vector2D(x * 20, y * 20);\r\n            if (!this.isInSnake(attempt)) {\r\n                this.food.object.position.copy(attempt);\r\n                set = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private isInSnake(vector: Vector2D): boolean {\r\n        let answer = false;\r\n        if (this.head.object.position.isEqual(vector)) {\r\n            answer = true;\r\n        }\r\n        else {\r\n            let i = 0;\r\n            let searching = false;\r\n            while (searching) {\r\n                if (this.body[i].object.position.isEqual(vector)) {\r\n                    searching = false;\r\n                    answer = true;\r\n                }\r\n                i++;\r\n                if (i == this.body.length) {\r\n                    searching = false;\r\n                }\r\n            }\r\n        }\r\n        return answer;\r\n    }\r\n}\r\n\r\nexport {PlayScene}","import {Game} from \"./framework/Game\";\r\nimport {IntroScene} from \"./game/IntroScene\";\r\n\r\nwindow.onload = function () {\r\n    let canvas: HTMLCanvasElement = <HTMLCanvasElement>document.getElementById('game'); //gets canvas element\r\n    let game = new Game(\"Snake\", canvas); //creates a game instance\r\n    game.pushScene(new IntroScene(game)); //adds the initial scene\r\n    game.init(); //initializes the game\r\n};"]}